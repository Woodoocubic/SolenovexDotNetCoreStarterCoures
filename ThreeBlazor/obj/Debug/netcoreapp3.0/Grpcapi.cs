// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grpcapi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace gRPCApi {

  /// <summary>Holder for reflection information generated from grpcapi.proto</summary>
  public static partial class GrpcapiReflection {

    #region Descriptor
    /// <summary>File descriptor for grpcapi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcapiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1ncnBjYXBpLnByb3RvEgNBUEkiGgoYR2V0QWxsRGVwYXJ0bWVudHNSZXF1",
            "ZXN0IkEKGUdldEFsbERlcGFydG1lbnRzUmVzcG9uc2USJAoLRGVwYXJ0bWVu",
            "dHMYASADKAsyDy5BUEkuRGVwYXJ0bWVudCJPCgpEZXBhcnRtZW50EgoKAmlk",
            "GAEgASgFEgwKBG5hbWUYAiABKAkSEAoIbG9jYXRpb24YAyABKAkSFQoNZW1w",
            "bG95ZWVDb3VudBgEIAEoBSI8ChVBZGREZXBhcnRtZW50c1JlcXVlc3QSIwoK",
            "ZGVwYXJ0bWVudBgBIAEoCzIPLkFQSS5EZXBhcnRtZW50IjsKFEFkZERlcGFy",
            "dG1lbnRSZXBvbnNlEiMKCmRlcGFydG1lbnQYASABKAsyDy5BUEkuRGVwYXJ0",
            "bWVudCIwChhHZXRCeURlcGFydG1lbnRJZFJlcXVlc3QSFAoMZGVwYXJ0bWVu",
            "dElkGAEgASgFIj0KGUdldEJ5RGVwYXJ0bWVudElkUmVzcG9uc2USIAoJZW1w",
            "bG95ZWVzGAEgAygLMg0uQVBJLkVtcGxveWVlIn0KCEVtcGxveWVlEgoKAmlk",
            "GAEgASgFEhQKDGRlcGFydG1lbnRJZBgCIAEoBRIRCglmaXJzdE5hbWUYAyAB",
            "KAkSEAoIbGFzdE5hbWUYBCABKAkSGwoGZ2VuZGVyGAUgASgOMgsuQVBJLkdl",
            "bmRlchINCgVmaXJlZBgGIAEoCCI1ChJBZGRFbXBsb3llZVJlcXVlc3QSHwoI",
            "ZW1wbG95ZWUYASABKAsyDS5BUEkuRW1wbG95ZWUiNgoTQWRkRW1wbG95ZWVS",
            "ZXNwb25zZRIfCghlbXBsb3llZRgBIAEoCzINLkFQSS5FbXBsb3llZSIhChNG",
            "aXJlRW1wbG95ZWVSZXF1ZXN0EgoKAmlkGAEgASgFIjcKFEZpcmVFbXBsb3ll",
            "ZVJlc3BvbmVzEh8KCGVtcGxveWVlGAEgASgLMg0uQVBJLkVtcGxveWVlKh4K",
            "BkdlbmRlchIKCgZGRU1BTEUQABIICgRNQUxFEAEymAEKC0RlcGFydG1lbnRz",
            "EkkKBkdldEFsbBIdLkFQSS5HZXRBbGxEZXBhcnRtZW50c1JlcXVlc3QaHi5B",
            "UEkuR2V0QWxsRGVwYXJ0bWVudHNSZXNwb25zZSIAEj4KA0FkZBIaLkFQSS5B",
            "ZGREZXBhcnRtZW50c1JlcXVlc3QaGS5BUEkuQWRkRGVwYXJ0bWVudFJlcG9u",
            "c2UiADLsAQoJRW1wbG95ZWVzElQKEUdldEJ5RGVwYXJ0bWVudElkEh0uQVBJ",
            "LkdldEJ5RGVwYXJ0bWVudElkUmVxdWVzdBoeLkFQSS5HZXRCeURlcGFydG1l",
            "bnRJZFJlc3BvbnNlIgASQgoLQWRkRW1wbG95ZWUSFy5BUEkuQWRkRW1wbG95",
            "ZWVSZXF1ZXN0GhguQVBJLkFkZEVtcGxveWVlUmVzcG9uc2UiABJFCgxGaXJl",
            "RW1wbG95ZWUSGC5BUEkuRmlyZUVtcGxveWVlUmVxdWVzdBoZLkFQSS5GaXJl",
            "RW1wbG95ZWVSZXNwb25lcyIAQgqqAgdnUlBDQXBpYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::gRPCApi.Gender), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.GetAllDepartmentsRequest), global::gRPCApi.GetAllDepartmentsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.GetAllDepartmentsResponse), global::gRPCApi.GetAllDepartmentsResponse.Parser, new[]{ "Departments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.Department), global::gRPCApi.Department.Parser, new[]{ "Id", "Name", "Location", "EmployeeCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.AddDepartmentsRequest), global::gRPCApi.AddDepartmentsRequest.Parser, new[]{ "Department" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.AddDepartmentReponse), global::gRPCApi.AddDepartmentReponse.Parser, new[]{ "Department" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.GetByDepartmentIdRequest), global::gRPCApi.GetByDepartmentIdRequest.Parser, new[]{ "DepartmentId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.GetByDepartmentIdResponse), global::gRPCApi.GetByDepartmentIdResponse.Parser, new[]{ "Employees" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.Employee), global::gRPCApi.Employee.Parser, new[]{ "Id", "DepartmentId", "FirstName", "LastName", "Gender", "Fired" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.AddEmployeeRequest), global::gRPCApi.AddEmployeeRequest.Parser, new[]{ "Employee" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.AddEmployeeResponse), global::gRPCApi.AddEmployeeResponse.Parser, new[]{ "Employee" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.FireEmployeeRequest), global::gRPCApi.FireEmployeeRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCApi.FireEmployeeRespones), global::gRPCApi.FireEmployeeRespones.Parser, new[]{ "Employee" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Gender {
    [pbr::OriginalName("FEMALE")] Female = 0,
    [pbr::OriginalName("MALE")] Male = 1,
  }

  #endregion

  #region Messages
  public sealed partial class GetAllDepartmentsRequest : pb::IMessage<GetAllDepartmentsRequest> {
    private static readonly pb::MessageParser<GetAllDepartmentsRequest> _parser = new pb::MessageParser<GetAllDepartmentsRequest>(() => new GetAllDepartmentsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllDepartmentsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllDepartmentsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllDepartmentsRequest(GetAllDepartmentsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllDepartmentsRequest Clone() {
      return new GetAllDepartmentsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllDepartmentsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllDepartmentsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllDepartmentsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAllDepartmentsResponse : pb::IMessage<GetAllDepartmentsResponse> {
    private static readonly pb::MessageParser<GetAllDepartmentsResponse> _parser = new pb::MessageParser<GetAllDepartmentsResponse>(() => new GetAllDepartmentsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllDepartmentsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllDepartmentsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllDepartmentsResponse(GetAllDepartmentsResponse other) : this() {
      departments_ = other.departments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllDepartmentsResponse Clone() {
      return new GetAllDepartmentsResponse(this);
    }

    /// <summary>Field number for the "Departments" field.</summary>
    public const int DepartmentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::gRPCApi.Department> _repeated_departments_codec
        = pb::FieldCodec.ForMessage(10, global::gRPCApi.Department.Parser);
    private readonly pbc::RepeatedField<global::gRPCApi.Department> departments_ = new pbc::RepeatedField<global::gRPCApi.Department>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::gRPCApi.Department> Departments {
      get { return departments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllDepartmentsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllDepartmentsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!departments_.Equals(other.departments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= departments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      departments_.WriteTo(output, _repeated_departments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += departments_.CalculateSize(_repeated_departments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllDepartmentsResponse other) {
      if (other == null) {
        return;
      }
      departments_.Add(other.departments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            departments_.AddEntriesFrom(input, _repeated_departments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Department : pb::IMessage<Department> {
    private static readonly pb::MessageParser<Department> _parser = new pb::MessageParser<Department>(() => new Department());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Department> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Department() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Department(Department other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      location_ = other.location_;
      employeeCount_ = other.employeeCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Department Clone() {
      return new Department(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "employeeCount" field.</summary>
    public const int EmployeeCountFieldNumber = 4;
    private int employeeCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EmployeeCount {
      get { return employeeCount_; }
      set {
        employeeCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Department);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Department other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Location != other.Location) return false;
      if (EmployeeCount != other.EmployeeCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (EmployeeCount != 0) hash ^= EmployeeCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Location);
      }
      if (EmployeeCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EmployeeCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (EmployeeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EmployeeCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Department other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.EmployeeCount != 0) {
        EmployeeCount = other.EmployeeCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Location = input.ReadString();
            break;
          }
          case 32: {
            EmployeeCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddDepartmentsRequest : pb::IMessage<AddDepartmentsRequest> {
    private static readonly pb::MessageParser<AddDepartmentsRequest> _parser = new pb::MessageParser<AddDepartmentsRequest>(() => new AddDepartmentsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddDepartmentsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDepartmentsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDepartmentsRequest(AddDepartmentsRequest other) : this() {
      department_ = other.department_ != null ? other.department_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDepartmentsRequest Clone() {
      return new AddDepartmentsRequest(this);
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 1;
    private global::gRPCApi.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCApi.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddDepartmentsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddDepartmentsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Department, other.Department)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (department_ != null) hash ^= Department.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (department_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Department);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddDepartmentsRequest other) {
      if (other == null) {
        return;
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::gRPCApi.Department();
        }
        Department.MergeFrom(other.Department);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (department_ == null) {
              Department = new global::gRPCApi.Department();
            }
            input.ReadMessage(Department);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddDepartmentReponse : pb::IMessage<AddDepartmentReponse> {
    private static readonly pb::MessageParser<AddDepartmentReponse> _parser = new pb::MessageParser<AddDepartmentReponse>(() => new AddDepartmentReponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddDepartmentReponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDepartmentReponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDepartmentReponse(AddDepartmentReponse other) : this() {
      department_ = other.department_ != null ? other.department_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDepartmentReponse Clone() {
      return new AddDepartmentReponse(this);
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 1;
    private global::gRPCApi.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCApi.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddDepartmentReponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddDepartmentReponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Department, other.Department)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (department_ != null) hash ^= Department.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (department_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Department);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddDepartmentReponse other) {
      if (other == null) {
        return;
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::gRPCApi.Department();
        }
        Department.MergeFrom(other.Department);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (department_ == null) {
              Department = new global::gRPCApi.Department();
            }
            input.ReadMessage(Department);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByDepartmentIdRequest : pb::IMessage<GetByDepartmentIdRequest> {
    private static readonly pb::MessageParser<GetByDepartmentIdRequest> _parser = new pb::MessageParser<GetByDepartmentIdRequest>(() => new GetByDepartmentIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByDepartmentIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByDepartmentIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByDepartmentIdRequest(GetByDepartmentIdRequest other) : this() {
      departmentId_ = other.departmentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByDepartmentIdRequest Clone() {
      return new GetByDepartmentIdRequest(this);
    }

    /// <summary>Field number for the "departmentId" field.</summary>
    public const int DepartmentIdFieldNumber = 1;
    private int departmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DepartmentId {
      get { return departmentId_; }
      set {
        departmentId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByDepartmentIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByDepartmentIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DepartmentId != other.DepartmentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DepartmentId != 0) hash ^= DepartmentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DepartmentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DepartmentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DepartmentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DepartmentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByDepartmentIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.DepartmentId != 0) {
        DepartmentId = other.DepartmentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DepartmentId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByDepartmentIdResponse : pb::IMessage<GetByDepartmentIdResponse> {
    private static readonly pb::MessageParser<GetByDepartmentIdResponse> _parser = new pb::MessageParser<GetByDepartmentIdResponse>(() => new GetByDepartmentIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByDepartmentIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByDepartmentIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByDepartmentIdResponse(GetByDepartmentIdResponse other) : this() {
      employees_ = other.employees_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByDepartmentIdResponse Clone() {
      return new GetByDepartmentIdResponse(this);
    }

    /// <summary>Field number for the "employees" field.</summary>
    public const int EmployeesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::gRPCApi.Employee> _repeated_employees_codec
        = pb::FieldCodec.ForMessage(10, global::gRPCApi.Employee.Parser);
    private readonly pbc::RepeatedField<global::gRPCApi.Employee> employees_ = new pbc::RepeatedField<global::gRPCApi.Employee>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::gRPCApi.Employee> Employees {
      get { return employees_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByDepartmentIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByDepartmentIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!employees_.Equals(other.employees_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= employees_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      employees_.WriteTo(output, _repeated_employees_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += employees_.CalculateSize(_repeated_employees_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByDepartmentIdResponse other) {
      if (other == null) {
        return;
      }
      employees_.Add(other.employees_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            employees_.AddEntriesFrom(input, _repeated_employees_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Employee : pb::IMessage<Employee> {
    private static readonly pb::MessageParser<Employee> _parser = new pb::MessageParser<Employee>(() => new Employee());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Employee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee(Employee other) : this() {
      id_ = other.id_;
      departmentId_ = other.departmentId_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      gender_ = other.gender_;
      fired_ = other.fired_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee Clone() {
      return new Employee(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "departmentId" field.</summary>
    public const int DepartmentIdFieldNumber = 2;
    private int departmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DepartmentId {
      get { return departmentId_; }
      set {
        departmentId_ = value;
      }
    }

    /// <summary>Field number for the "firstName" field.</summary>
    public const int FirstNameFieldNumber = 3;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastName" field.</summary>
    public const int LastNameFieldNumber = 4;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 5;
    private global::gRPCApi.Gender gender_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCApi.Gender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "fired" field.</summary>
    public const int FiredFieldNumber = 6;
    private bool fired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Fired {
      get { return fired_; }
      set {
        fired_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Employee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Employee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DepartmentId != other.DepartmentId) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Gender != other.Gender) return false;
      if (Fired != other.Fired) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (DepartmentId != 0) hash ^= DepartmentId.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (Fired != false) hash ^= Fired.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DepartmentId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DepartmentId);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LastName);
      }
      if (Gender != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Gender);
      }
      if (Fired != false) {
        output.WriteRawTag(48);
        output.WriteBool(Fired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (DepartmentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DepartmentId);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (Fired != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Employee other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.DepartmentId != 0) {
        DepartmentId = other.DepartmentId;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      if (other.Fired != false) {
        Fired = other.Fired;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            DepartmentId = input.ReadInt32();
            break;
          }
          case 26: {
            FirstName = input.ReadString();
            break;
          }
          case 34: {
            LastName = input.ReadString();
            break;
          }
          case 40: {
            Gender = (global::gRPCApi.Gender) input.ReadEnum();
            break;
          }
          case 48: {
            Fired = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddEmployeeRequest : pb::IMessage<AddEmployeeRequest> {
    private static readonly pb::MessageParser<AddEmployeeRequest> _parser = new pb::MessageParser<AddEmployeeRequest>(() => new AddEmployeeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddEmployeeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddEmployeeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddEmployeeRequest(AddEmployeeRequest other) : this() {
      employee_ = other.employee_ != null ? other.employee_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddEmployeeRequest Clone() {
      return new AddEmployeeRequest(this);
    }

    /// <summary>Field number for the "employee" field.</summary>
    public const int EmployeeFieldNumber = 1;
    private global::gRPCApi.Employee employee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCApi.Employee Employee {
      get { return employee_; }
      set {
        employee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddEmployeeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddEmployeeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Employee, other.Employee)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (employee_ != null) hash ^= Employee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (employee_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Employee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (employee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Employee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddEmployeeRequest other) {
      if (other == null) {
        return;
      }
      if (other.employee_ != null) {
        if (employee_ == null) {
          Employee = new global::gRPCApi.Employee();
        }
        Employee.MergeFrom(other.Employee);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (employee_ == null) {
              Employee = new global::gRPCApi.Employee();
            }
            input.ReadMessage(Employee);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddEmployeeResponse : pb::IMessage<AddEmployeeResponse> {
    private static readonly pb::MessageParser<AddEmployeeResponse> _parser = new pb::MessageParser<AddEmployeeResponse>(() => new AddEmployeeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddEmployeeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddEmployeeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddEmployeeResponse(AddEmployeeResponse other) : this() {
      employee_ = other.employee_ != null ? other.employee_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddEmployeeResponse Clone() {
      return new AddEmployeeResponse(this);
    }

    /// <summary>Field number for the "employee" field.</summary>
    public const int EmployeeFieldNumber = 1;
    private global::gRPCApi.Employee employee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCApi.Employee Employee {
      get { return employee_; }
      set {
        employee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddEmployeeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddEmployeeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Employee, other.Employee)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (employee_ != null) hash ^= Employee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (employee_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Employee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (employee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Employee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddEmployeeResponse other) {
      if (other == null) {
        return;
      }
      if (other.employee_ != null) {
        if (employee_ == null) {
          Employee = new global::gRPCApi.Employee();
        }
        Employee.MergeFrom(other.Employee);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (employee_ == null) {
              Employee = new global::gRPCApi.Employee();
            }
            input.ReadMessage(Employee);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FireEmployeeRequest : pb::IMessage<FireEmployeeRequest> {
    private static readonly pb::MessageParser<FireEmployeeRequest> _parser = new pb::MessageParser<FireEmployeeRequest>(() => new FireEmployeeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FireEmployeeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FireEmployeeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FireEmployeeRequest(FireEmployeeRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FireEmployeeRequest Clone() {
      return new FireEmployeeRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FireEmployeeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FireEmployeeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FireEmployeeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FireEmployeeRespones : pb::IMessage<FireEmployeeRespones> {
    private static readonly pb::MessageParser<FireEmployeeRespones> _parser = new pb::MessageParser<FireEmployeeRespones>(() => new FireEmployeeRespones());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FireEmployeeRespones> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FireEmployeeRespones() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FireEmployeeRespones(FireEmployeeRespones other) : this() {
      employee_ = other.employee_ != null ? other.employee_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FireEmployeeRespones Clone() {
      return new FireEmployeeRespones(this);
    }

    /// <summary>Field number for the "employee" field.</summary>
    public const int EmployeeFieldNumber = 1;
    private global::gRPCApi.Employee employee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCApi.Employee Employee {
      get { return employee_; }
      set {
        employee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FireEmployeeRespones);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FireEmployeeRespones other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Employee, other.Employee)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (employee_ != null) hash ^= Employee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (employee_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Employee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (employee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Employee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FireEmployeeRespones other) {
      if (other == null) {
        return;
      }
      if (other.employee_ != null) {
        if (employee_ == null) {
          Employee = new global::gRPCApi.Employee();
        }
        Employee.MergeFrom(other.Employee);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (employee_ == null) {
              Employee = new global::gRPCApi.Employee();
            }
            input.ReadMessage(Employee);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
