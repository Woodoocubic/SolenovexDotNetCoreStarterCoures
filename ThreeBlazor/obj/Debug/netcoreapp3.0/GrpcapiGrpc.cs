// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grpcapi.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPCApi {
  public static partial class Departments
  {
    static readonly string __ServiceName = "API.Departments";

    static readonly grpc::Marshaller<global::gRPCApi.GetAllDepartmentsRequest> __Marshaller_API_GetAllDepartmentsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.GetAllDepartmentsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCApi.GetAllDepartmentsResponse> __Marshaller_API_GetAllDepartmentsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.GetAllDepartmentsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCApi.AddDepartmentsRequest> __Marshaller_API_AddDepartmentsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.AddDepartmentsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCApi.AddDepartmentReponse> __Marshaller_API_AddDepartmentReponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.AddDepartmentReponse.Parser.ParseFrom);

    static readonly grpc::Method<global::gRPCApi.GetAllDepartmentsRequest, global::gRPCApi.GetAllDepartmentsResponse> __Method_GetAll = new grpc::Method<global::gRPCApi.GetAllDepartmentsRequest, global::gRPCApi.GetAllDepartmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_API_GetAllDepartmentsRequest,
        __Marshaller_API_GetAllDepartmentsResponse);

    static readonly grpc::Method<global::gRPCApi.AddDepartmentsRequest, global::gRPCApi.AddDepartmentReponse> __Method_Add = new grpc::Method<global::gRPCApi.AddDepartmentsRequest, global::gRPCApi.AddDepartmentReponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_API_AddDepartmentsRequest,
        __Marshaller_API_AddDepartmentReponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Departments</summary>
    [grpc::BindServiceMethod(typeof(Departments), "BindService")]
    public abstract partial class DepartmentsBase
    {
      public virtual global::System.Threading.Tasks.Task<global::gRPCApi.GetAllDepartmentsResponse> GetAll(global::gRPCApi.GetAllDepartmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCApi.AddDepartmentReponse> Add(global::gRPCApi.AddDepartmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Departments</summary>
    public partial class DepartmentsClient : grpc::ClientBase<DepartmentsClient>
    {
      /// <summary>Creates a new client for Departments</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DepartmentsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Departments that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DepartmentsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DepartmentsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DepartmentsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::gRPCApi.GetAllDepartmentsResponse GetAll(global::gRPCApi.GetAllDepartmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCApi.GetAllDepartmentsResponse GetAll(global::gRPCApi.GetAllDepartmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.GetAllDepartmentsResponse> GetAllAsync(global::gRPCApi.GetAllDepartmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.GetAllDepartmentsResponse> GetAllAsync(global::gRPCApi.GetAllDepartmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual global::gRPCApi.AddDepartmentReponse Add(global::gRPCApi.AddDepartmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Add(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCApi.AddDepartmentReponse Add(global::gRPCApi.AddDepartmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Add, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.AddDepartmentReponse> AddAsync(global::gRPCApi.AddDepartmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.AddDepartmentReponse> AddAsync(global::gRPCApi.AddDepartmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Add, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DepartmentsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DepartmentsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DepartmentsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAll, serviceImpl.GetAll)
          .AddMethod(__Method_Add, serviceImpl.Add).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DepartmentsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCApi.GetAllDepartmentsRequest, global::gRPCApi.GetAllDepartmentsResponse>(serviceImpl.GetAll));
      serviceBinder.AddMethod(__Method_Add, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCApi.AddDepartmentsRequest, global::gRPCApi.AddDepartmentReponse>(serviceImpl.Add));
    }

  }
  /// <summary>
  ///-------------------employee 
  /// </summary>
  public static partial class Employees
  {
    static readonly string __ServiceName = "API.Employees";

    static readonly grpc::Marshaller<global::gRPCApi.GetByDepartmentIdRequest> __Marshaller_API_GetByDepartmentIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.GetByDepartmentIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCApi.GetByDepartmentIdResponse> __Marshaller_API_GetByDepartmentIdResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.GetByDepartmentIdResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCApi.AddEmployeeRequest> __Marshaller_API_AddEmployeeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.AddEmployeeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCApi.AddEmployeeResponse> __Marshaller_API_AddEmployeeResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.AddEmployeeResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCApi.FireEmployeeRequest> __Marshaller_API_FireEmployeeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.FireEmployeeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCApi.FireEmployeeRespones> __Marshaller_API_FireEmployeeRespones = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCApi.FireEmployeeRespones.Parser.ParseFrom);

    static readonly grpc::Method<global::gRPCApi.GetByDepartmentIdRequest, global::gRPCApi.GetByDepartmentIdResponse> __Method_GetByDepartmentId = new grpc::Method<global::gRPCApi.GetByDepartmentIdRequest, global::gRPCApi.GetByDepartmentIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByDepartmentId",
        __Marshaller_API_GetByDepartmentIdRequest,
        __Marshaller_API_GetByDepartmentIdResponse);

    static readonly grpc::Method<global::gRPCApi.AddEmployeeRequest, global::gRPCApi.AddEmployeeResponse> __Method_AddEmployee = new grpc::Method<global::gRPCApi.AddEmployeeRequest, global::gRPCApi.AddEmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddEmployee",
        __Marshaller_API_AddEmployeeRequest,
        __Marshaller_API_AddEmployeeResponse);

    static readonly grpc::Method<global::gRPCApi.FireEmployeeRequest, global::gRPCApi.FireEmployeeRespones> __Method_FireEmployee = new grpc::Method<global::gRPCApi.FireEmployeeRequest, global::gRPCApi.FireEmployeeRespones>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FireEmployee",
        __Marshaller_API_FireEmployeeRequest,
        __Marshaller_API_FireEmployeeRespones);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPCApi.GrpcapiReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of Employees</summary>
    [grpc::BindServiceMethod(typeof(Employees), "BindService")]
    public abstract partial class EmployeesBase
    {
      public virtual global::System.Threading.Tasks.Task<global::gRPCApi.GetByDepartmentIdResponse> GetByDepartmentId(global::gRPCApi.GetByDepartmentIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCApi.AddEmployeeResponse> AddEmployee(global::gRPCApi.AddEmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCApi.FireEmployeeRespones> FireEmployee(global::gRPCApi.FireEmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Employees</summary>
    public partial class EmployeesClient : grpc::ClientBase<EmployeesClient>
    {
      /// <summary>Creates a new client for Employees</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EmployeesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Employees that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EmployeesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EmployeesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EmployeesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::gRPCApi.GetByDepartmentIdResponse GetByDepartmentId(global::gRPCApi.GetByDepartmentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByDepartmentId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCApi.GetByDepartmentIdResponse GetByDepartmentId(global::gRPCApi.GetByDepartmentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByDepartmentId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.GetByDepartmentIdResponse> GetByDepartmentIdAsync(global::gRPCApi.GetByDepartmentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByDepartmentIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.GetByDepartmentIdResponse> GetByDepartmentIdAsync(global::gRPCApi.GetByDepartmentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByDepartmentId, null, options, request);
      }
      public virtual global::gRPCApi.AddEmployeeResponse AddEmployee(global::gRPCApi.AddEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCApi.AddEmployeeResponse AddEmployee(global::gRPCApi.AddEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddEmployee, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.AddEmployeeResponse> AddEmployeeAsync(global::gRPCApi.AddEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.AddEmployeeResponse> AddEmployeeAsync(global::gRPCApi.AddEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddEmployee, null, options, request);
      }
      public virtual global::gRPCApi.FireEmployeeRespones FireEmployee(global::gRPCApi.FireEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FireEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCApi.FireEmployeeRespones FireEmployee(global::gRPCApi.FireEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FireEmployee, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.FireEmployeeRespones> FireEmployeeAsync(global::gRPCApi.FireEmployeeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FireEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCApi.FireEmployeeRespones> FireEmployeeAsync(global::gRPCApi.FireEmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FireEmployee, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EmployeesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EmployeesClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(EmployeesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetByDepartmentId, serviceImpl.GetByDepartmentId)
          .AddMethod(__Method_AddEmployee, serviceImpl.AddEmployee)
          .AddMethod(__Method_FireEmployee, serviceImpl.FireEmployee).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EmployeesBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetByDepartmentId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCApi.GetByDepartmentIdRequest, global::gRPCApi.GetByDepartmentIdResponse>(serviceImpl.GetByDepartmentId));
      serviceBinder.AddMethod(__Method_AddEmployee, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCApi.AddEmployeeRequest, global::gRPCApi.AddEmployeeResponse>(serviceImpl.AddEmployee));
      serviceBinder.AddMethod(__Method_FireEmployee, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCApi.FireEmployeeRequest, global::gRPCApi.FireEmployeeRespones>(serviceImpl.FireEmployee));
    }

  }
}
#endregion
